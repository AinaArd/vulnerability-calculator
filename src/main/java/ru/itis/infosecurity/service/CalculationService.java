package ru.itis.infosecurity.service;

import org.springframework.stereotype.Service;
import ru.itis.infosecurity.forms.BaseMetrixForm;

import java.util.Map;
import java.util.TreeMap;


@Service
public class CalculationService {

    public double calculateBaseMetrix(BaseMetrixForm form) {
        return calculateFunction(getHashMap(form));
    }

    private Map<String, Double> getHashMap(BaseMetrixForm form) {
        Map<String, Double> params = new TreeMap<>();
        getValueAV(params, form);
        getValueAC(params, form);
        getValueAu(params, form);
        getValueC(params, form);
        getValueI(params, form);
        getValueA(params, form);
        System.out.println(params);
        return params;
    }

    private double calculateFunction(Map<String, Double> params) {
        double impact = 10.41 * (1 - ((1 - params.get("C")) * (1 - params.get("I")) * (1 - params.get("A"))));
        double exploitability = 20 * params.get("AV") * params.get("AC") * params.get("Au");
        return (((0.6 * impact) + (0.4 * exploitability) - 1.5) * impact);
    }

    private void getValueC(Map<String, Double> params, BaseMetrixForm form) {
        String c = form.getC();
        switch (c) {
            case "N":
                params.put("C", 0.0);
                break;
            case "P":
                params.put("C", 0.275);
                break;
            case "C":
                params.put("C", 0.66);
                break;
        }
    }

    private void getValueI(Map<String, Double> params, BaseMetrixForm form) {
        String i = form.getI();
        switch (i) {
            case "N":
                params.put("I", 0.0);
                break;
            case "P":
                params.put("I", 0.275);
                break;
            case "C":
                params.put("I", 0.66);
                break;
        }
    }

    private void getValueA(Map<String, Double> params, BaseMetrixForm form) {
        String a = form.getA();
        switch (a) {
            case "N":
                params.put("A", 0.0);
                break;
            case "P":
                params.put("A", 0.275);
                break;
            case "C":
                params.put("A", 0.66);
                break;
        }
    }

    private void getValueAV(Map<String, Double> params, BaseMetrixForm form) {
        String AV = form.getAV();
        switch (AV) {
            case "L":
                params.put("AV", 0.395);
                break;
            case "A":
                params.put("AV", 0.646);
                break;
            case "N":
                params.put("AV", 1.0);
                break;
        }
    }

    private void getValueAC(Map<String, Double> params, BaseMetrixForm form) {
        String AC = form.getAC();
        switch (AC) {
            case "H":
                params.put("AC", 0.35);
                break;
            case "M":
                params.put("AC", 0.61);
                break;
            case "L":
                params.put("AC", 0.71);
                break;
        }
    }

    private void getValueAu(Map<String, Double> params, BaseMetrixForm form) {
        String Au = form.getAu();
        switch (Au) {
            case "M":
                params.put("Au", 0.45);
                break;
            case "S":
                params.put("Au", 0.56);
                break;
            case "N":
                params.put("Au", 0.704);
                break;
        }
    }


}
