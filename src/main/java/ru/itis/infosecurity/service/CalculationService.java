package ru.itis.infosecurity.service;

import org.springframework.stereotype.Service;
import ru.itis.infosecurity.forms.BaseForm;
import ru.itis.infosecurity.forms.TimeForm;

import java.text.DecimalFormat;
import java.util.Map;
import java.util.TreeMap;

@Service
public class CalculationService {

    private static Map<String, Double> params = new TreeMap<>();
    private static double baseScore;

    public double calculateBaseMetrix(BaseForm form) {
        return calculateFunction(getHashMapBase(form));
    }

    private double calculateFunction(Map<String, Double> params) {
        double impact = 10.41 * (1 - ((1 - params.get("C")) * (1 - params.get("I")) * (1 - params.get("A"))));
        double fImpact;
        if (impact != 0) {
            fImpact = 1.176;
        } else {
            fImpact = 0.0;
        }
        double exploitability = 20 * params.get("AV") * params.get("AC") * params.get("Au");
        baseScore = (((0.6 * impact) + (0.4 * exploitability) - 1.5) * fImpact);
        return baseScore;
    }

    public double calculateTimeMetrix(BaseForm baseForm, TimeForm timeForm) {
        addParams(timeForm);
        double temporalScore = baseScore * params.get("E") * params.get("RL") * params.get("RC");
        DecimalFormat df = new DecimalFormat("###.#");
        return Double.parseDouble(df.format(temporalScore));
    }

    private Map<String, Double> getHashMapBase(BaseForm form) {
        getValues(params, form);
        return params;
    }

    private void getValues(Map<String, Double> params, BaseForm form) {
        String AV = form.getAV();
        switch (AV) {
            case "L":
                params.put("AV", 0.395);
                break;
            case "A":
                params.put("AV", 0.646);
                break;
            case "N":
                params.put("AV", 1.0);
                break;
        }
        String AC = form.getAC();
        switch (AC) {
            case "H":
                params.put("AC", 0.35);
                break;
            case "M":
                params.put("AC", 0.61);
                break;
            case "L":
                params.put("AC", 0.71);
                break;
        }
        String Au = form.getAu();
        switch (Au) {
            case "M":
                params.put("Au", 0.45);
                break;
            case "S":
                params.put("Au", 0.56);
                break;
            case "N":
                params.put("Au", 0.704);
                break;
        }
        String c = form.getC();
        switch (c) {
            case "N":
                params.put("C", 0.0);
                break;
            case "P":
                params.put("C", 0.275);
                break;
            case "C":
                params.put("C", 0.66);
                break;
        }
        String i = form.getI();
        switch (i) {
            case "N":
                params.put("I", 0.0);
                break;
            case "P":
                params.put("I", 0.275);
                break;
            case "C":
                params.put("I", 0.66);
                break;
        }
        String a = form.getA();
        switch (a) {
            case "N":
                params.put("A", 0.0);
                break;
            case "P":
                params.put("A", 0.275);
                break;
            case "C":
                params.put("A", 0.66);
                break;
        }

    }

    private void addParams(TimeForm timeForm) {
        String E = timeForm.getE();
        switch (E) {
            case "ND":
                params.put("E", 1.0);
                break;
            case "U":
                params.put("E", 0.85);
                break;
            case "POC":
                params.put("E", 0.9);
                break;
            case "F":
                params.put("E", 0.95);
                break;
            case "H":
                params.put("E", 1.0);
                break;
        }
        String RL = timeForm.getRL();
        switch (RL) {
            case "ND":
                params.put("RL", 1.0);
                break;
            case "OF":
                params.put("RL", 0.87);
                break;
            case "TF":
                params.put("RL", 0.9);
                break;
            case "W":
                params.put("RL", 0.95);
                break;
            case "U":
                params.put("RL", 1.0);
                break;
        }
        String RC = timeForm.getRC();
        switch (RC) {
            case "ND":
                params.put("RL", 1.0);
                break;
            case "UC":
                params.put("RL", 0.9);
                break;
            case "UR":
                params.put("RL", 0.95);
                break;
            case "C":
                params.put("RL", 1.0);
                break;
        }
    }
}
